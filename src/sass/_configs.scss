@charset 'UTF-8';

$themes: (
  base: (
    primary:   #191818,
    secondary: #2196f3,
    third:     #f37f21,
    danger:    #f3212b,
    warning:   #f3e821,
    success:   #4caf50,
    admin:     #f32194,
  ),
  dark: (

  )
);

$contrast-colors: (
  dark: (
    primary:    rgba(white, 1),
    secondary:  rgba(white, .70),
    disabled:   rgba(white, .50),
    hint:       rgba(white, .12),
    flash:      rgba(white, .04),
    active:     rgba(white, .12)
  ),
  light: (
    primary:    rgba(black, .87),
    secondary:  rgba(black, .54),
    disabled:   rgba(black, .38),
    hint:       rgba(black, .12),
    flash:      rgba(black, .04),
    active:     rgba(black, .12)
  ),
);

@function contrast($background: 'light', $type: 'primary') {
  $map: map-get($contrast-colors, $background);
  @return map-get($map, $type);
}

@mixin color($background: 'light', $type: 'primary') {
  color: contrast($background, $type)
}
@mixin borger-color($background: 'light', $type: 'primary') {
  borger-color: contrast($background, $type)
}
@mixin background-color($background: 'light', $type: 'primary') {
  background-color: contrast($background, $type)
}
@mixin outline-color($background: 'light', $type: 'primary') {
  outline-color: contrast($background, $type)
}

$base-font-size: 1rem;
$base-line-height: 1.25 * $base-font-size;

$text-settings: (
  'xs': (
    font-size: .75rem, // 12px
    line-height: $base-line-height
  ),
  's': (
    font-size: .875rem, // 14px
    line-height: $base-line-height
  ),
  'n': (
    font-size: 1rem, // 16px
    line-height: $base-line-height
  ),
  'm': (
    font-size: 1.125rem, // 18px
    line-height: $base-line-height * 2
  ),
  'l': (
    font-size: 1.25rem, // 20px
    line-height: $base-line-height * 2
  ),
  'xl': (
    font-size: 1.5rem, // 24px
    line-height: $base-line-height * 2
  )
);

@function text-scale($level) {
  @return map-get(map-get($text-settings, $level), 'font-size');
}

@function line-height($level) {
  @return map-get(map-get($text-settings, $level), 'line-height');
}

@mixin text-setting($level) {
  font-size: text-scale($level);
  line-height: line-height($level);
}

/// Миксин Themify 
/// @access private
/// @author Hugo Giraudel
/// @param {String} $property - темизируемое свойство
/// @param {String} $key - ключ цвета, используемого из темы
/// @param {Map} $themes [$themes] - ассоциативный массив с темами
@mixin themify($property, $key, $themes: $themes) {
  // Проход по темам
  @each $theme, $colors in $themes {
    // Создание селектора (типа `.media.theme-unicorn, .theme-unicorn .media`)
    &.theme-#{$theme},
    .theme-#{$theme} & {
      // Вывод декларации
      #{$property}: map-get($colors, $key);
    }
  }
}
/// Темизация цвета шрифта с помощью миксина `themify` 
/// @access public
/// @see {mixin} themify
@mixin color($arguments...) {
  @include themify('color', $arguments...);
}

/// Темизация цвета границы элемента с помощью миксина `themify` 
/// @access public
/// @see {mixin} themify
@mixin border-color($arguments...) {
  @include themify('border-color', $arguments...);
}

/// Темизация цвета фона элемента с помощью миксина `themify` 
/// @access public
/// @see {mixin} themify
@mixin background-color($arguments...) {
  @include themify('background-color', $arguments...);
}

/// Темизация цвета внешней границы с помощью миксина `themify` 
/// @access public
/// @see {mixin} themify
@mixin outline-color($arguments...) {
  @include themify('outline-color', $arguments...);
}